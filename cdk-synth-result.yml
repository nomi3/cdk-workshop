Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Application
          Value: CdkWorkshopStack
        - Key: Name
          Value: VPC
    Metadata:
      aws:cdk:path: CdkWorkshopStack/VPC
  igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value: CdkWorkshopStack
        - Key: Name
          Value: igw
    Metadata:
      aws:cdk:path: CdkWorkshopStack/igw
  igwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: igw
    Metadata:
      aws:cdk:path: CdkWorkshopStack/igwAttachment
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Application
          Value: CdkWorkshopStack
        - Key: Name
          Value: PublicSubnet1
    Metadata:
      aws:cdk:path: CdkWorkshopStack/PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Application
          Value: CdkWorkshopStack
        - Key: Name
          Value: PublicSubnet2
    Metadata:
      aws:cdk:path: CdkWorkshopStack/PublicSubnet2
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value: CdkWorkshopStack
        - Key: Name
          Value: PublicRouteTable
    Metadata:
      aws:cdk:path: CdkWorkshopStack/PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: igw
    Metadata:
      aws:cdk:path: CdkWorkshopStack/PublicRoute
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1
    Metadata:
      aws:cdk:path: CdkWorkshopStack/PublicSubnet1RouteTableAssociation
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2
    Metadata:
      aws:cdk:path: CdkWorkshopStack/PublicSubnet2RouteTableAssociation
  publicAlbSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for Public ALB
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Enable HTTP access via port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPC
    Metadata:
      aws:cdk:path: CdkWorkshopStack/publicAlbSg
  targetFleetSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for Target Fleet
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Enable SSH access via port 22
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: VPC
    Metadata:
      aws:cdk:path: CdkWorkshopStack/targetFleetSg
  targetFleetSgIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Rule For HTTP Access From Public ALB
      FromPort: 80
      GroupId:
        Ref: targetFleetSg
      SourceSecurityGroupId:
        Ref: publicAlbSg
      ToPort: 80
    Metadata:
      aws:cdk:path: CdkWorkshopStack/targetFleetSgIngress1
  alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "60"
      Scheme: internet-facing
      Subnets:
        - 10.0.1.0/24
        - 10.0.2.0/24
    Metadata:
      aws:cdk:path: CdkWorkshopStack/alb
  listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
      LoadBalancerArn:
        Ref: alb
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: CdkWorkshopStack/listener
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.18.0,@aws-cdk/aws-cloudwatch=1.18.0,@aws-cdk/aws-ec2=1.18.0,@aws-cdk/aws-elasticloadbalancingv2=1.18.0,@aws-cdk/aws-iam=1.18.0,@aws-cdk/aws-ssm=1.18.0,@aws-cdk/core=1.18.0,@aws-cdk/cx-api=1.18.0,@aws-cdk/region-info=1.18.0,jsii-runtime=node.js/v11.15.0
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
